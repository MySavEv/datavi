import streamlit as st
import pandas as pd
import altair as alt
import plotly.express as px
import center as da
import plotly.graph_objects as go
import numpy as np
from wordcloud import WordCloud

def preword(numdf ,col):
    v = {}
    if numdf == 1:
        v = da.df_kery[col].to_numpy()
    else:
        v = da.df_maikery[col].to_numpy()

    dele = []
    for i,value in enumerate(v):
        if not len(str(value)) == 5:
            if not (str(value)[-1] in ['0','1','2','3','4','5','6','7','8','9']):
                dele.append(i)
    return np.delete(v,dele)


select = st.selectbox('คณะ',da.df_kery['คณะ'].unique())


scale = {'น้อยที่สุด': 1, 'น้อย': 2, 'ปลานกลาง': 3, 'มาก': 4, 'มากที่สุด': 5}
satisfication = da.df_kery[da.df_kery['คณะ'] == select][['ด้านที่ 1 ปัจจัยด้านการศึกษา [1. นักศึกษาไม่มีความกระตือรือร้นในการเรียน]',
                         'ด้านที่ 1 ปัจจัยด้านการศึกษา [2. นักศึกษาส่งการบ้านไม่ครบและไม่ตรงตามกำหนดเวลา]',
                         'ด้านที่ 1 ปัจจัยด้านการศึกษา [3. นักศึกษามีคะแนนสอบที่ไม่น่าพอใจ]',
                         'ด้านที่ 1 ปัจจัยด้านการศึกษา [4. นักศึกษาไม่ได้เข้าเรียนเป็นประจำ]',
                         'ด้านที่ 1 ปัจจัยด้านการศึกษา [5. นักศึกษาไม่ทบทวนบทเรียนสม่ำเสมอ]',
                         'ด้านที่ 1 ปัจจัยด้านการศึกษา [6. นักศึกษาทำกิจกรรมของมหาวิทยาลัยเป็นประจำ]',
                         'ด้านที่ 1 ปัจจัยด้านการศึกษา [7. นักศึกษามีส่วนร่วมในชั้นเรียนน้อย]',
                         'ด้านที่ 1 ปัจจัยด้านการศึกษา [8. ครอบครัวมีผลต่อผลการเรียนของนักศึกษา]' ]].replace(regex=scale)

labels = ['นักศึกษาไม่มีความกระตือรือร้นในการเรียน',
          'นักศึกษาส่งการบ้านไม่ครบและไม่ตรงตามกำหนดเวลา',
          'นักศึกษามีคะแนนสอบที่ไม่น่าพอใจ',
          'นักศึกษาไม่ได้เข้าเรียนเป็นประจำ',
          'นักศึกษาไม่ทบทวนบทเรียนสม่ำเสมอ',
          'นักศึกษาทำกิจกรรมของมหาวิทยาลัยเป็นประจำ',
          'นักศึกษามีการมีส่วนร่วมในชั้นเรียนน้อย',
          'ครอบครัวมีผลต่อผลการเรียนของนักศึกษา']

vals = satisfication.mean()

fig = go.Figure(go.Bar(
    y=labels,
    x=vals,
    text=vals,
    texttemplate="%{value:.2f}",
    orientation='h',
    marker=dict(color=px.colors.qualitative.Pastel),
))

fig.update_layout(
    title="ปัจจัยด้านนักศึกษา",
    xaxis_title="จำนวนนักศึกษา",
    yaxis_title="ประเด็นของปัจจัยด้านการศึกษา",
    yaxis={'categoryorder': 'total ascending'},
    xaxis_range=[1, 5],
    xaxis=dict(
        tickmode="array",
        tickvals=np.arange(len(vals)) + 1,
        ticktext=["1 น้อยที่สุด", "2 น้อย", "3 ปานกลาง", "4 มาก", "5 มากที่สุด"]
    ),
    height=500,
    width=700,
)

st.plotly_chart(fig)


satisfication = da.df_kery[da.df_kery['คณะ'] == select][['ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [1. อาจารย์มีการใช้สื่อการเรียนการสอนที่ไม่น่าสนใจ]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [2. อาจารย์ไม่มีความสามารถในการทําให้ผู้เรียนเข้าใจเนื้อหาได้ง่าย]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [3. บรรยากาศในห้องเรียนไม่น่าสนุกสนาน]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [4. อาจารย์ใช้เกณฑ์การตัดเกรดที่ไม่เหมาะสม]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [5. อาจารย์ให้ความสนใจนักศึกษาไม่เพียงพอ]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [6. อาจารย์ไม่รับฟังความคิดเห็นของนักศึกษา]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [7. อาจารย์ไม่มีความตั้งใจในการสอน]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [8. อาจารย์ผู้สอนมีการประเมินคะแนนที่ไม่ยุติธรรม]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [9. อาจารย์ผู้สอนมีประสบการณ์และความรู้ไม่เพียงพอในวิชาที่สอน]',
                         'ด้านที่ 2 ปัจจัยด้านอาจารย์ผู้สอน [10. อาจารย์ผู้สอนไม่มีการพัฒนาความรู้ให้เป็นปัจจุบันในวิชาที่สอน]',]].replace(regex=scale)

labels = ['อาจารย์มีการใช้สื่อการเรียนการสอนที่ไม่น่าสนใจ',
          'อาจารย์ไม่มีความสามารถในการทําให้ผู้เรียนเข้าใจเนื้อหาได้ง่าย',
          'บรรยากาศในห้องเรียนไม่น่าสนุกสนาน',
          'อาจารย์ใช้เกณฑ์การตัดเกรดที่ไม่เหมาะสม',
          'อาจารย์ให้ความสนใจนักศึกษาไม่เพียงพอ',
          'อาจารย์ไม่รับฟังความคิดเห็นของนักศึกษา',
          'อาจารย์ไม่มีความตั้งใจในการสอน',
          'อาจารย์ผู้สอนมีการประเมินคะแนนที่ไม่ยุติธรรม',
          'อาจารย์ผู้สอนมีประสบการณ์และความรู้ไม่เพียงพอในวิชาที่สอน',
          'อาจารย์ผู้สอนไม่มีการพัฒนาความรู้ให้เป็นปัจจุบันในวิชาที่สอน',]

vals = satisfication.mean()

fig = go.Figure(go.Bar(
    y=labels,
    x=vals,
    text=vals,
    texttemplate="%{value:.2f}",
    orientation='h',
    marker=dict(color=px.colors.qualitative.Pastel),
))

fig.update_layout(
    title="ปัจจัยด้านอาจารย์ผู้สอน",
    xaxis_title="จำนวนนักศึกษา",
    yaxis_title="ประเด็นของปัจจัยด้านอาจารย์ผู้สอน",
    yaxis={'categoryorder': 'total ascending'},
    xaxis_range=[1, 5],
    xaxis=dict(
        tickmode="array",
        tickvals=np.arange(len(vals)) + 1,
        ticktext=["1 น้อยที่สุด", "2 น้อย", "3 ปานกลาง", "4 มาก", "5 มากที่สุด"]
    ),
    height=500,
    width=700,
)

st.plotly_chart(fig)

satisfication = da.df_kery[da.df_kery['คณะ'] == select][['ด้านที่ 3 ปัจจัยด้านสถานศึกษา [1. เนื้อหาสาระที่กําหนดในหลักสูตรไม่เหมาะสม]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [2. อุปกรณ์การเรียนการสอนในห้องเรียนไม่เพียงพอ]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [3. อุปกรณ์การเรียนการสอนในห้องเรียนไม่ทันสมัย]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [4. ห้องปฏิบัติการ(ห้องLab)มีอุปกรณ์เครื่องมือที่ไม่มีประสิทธิภาพ ทำให้ไม่สามารถเกิดความรู้และความเข้าใจได้]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [5. ขนาดของห้องเรียนไม่เอื้ออํานวยต่อการการเรียน]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [6. สภาพห้องเรียนเป็นอุปสรรคต่อการสร้างสมาธิให้เกิดต่อการเรียน]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [7. บริเวณรอบสถานศึกษามีสิ่งเร้าทําให้ไม่อยากเข้าเรียน]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [8. ในแต่ละคณะมีกิจกรรมที่ไม่เหมาะสมทําให้นักศึกษามีเวลาน้อยในการทบทวนบทเรียนให้ครบถ้วน]',
                         'ด้านที่ 3 ปัจจัยด้านสถานศึกษา [9. การจัดตารางสอบไม่เหมาะสมต่อความยากง่ายและจํานวนของวิชา]',]].replace(regex=scale)

labels = ['เนื้อหาสาระที่กําหนดในหลักสูตรไม่เหมาะสม',
          'อุปกรณ์การเรียนการสอนในห้องเรียนไม่เพียงพอ',
          'อุปกรณ์การเรียนการสอนในห้องเรียนไม่ทันสมัย',
          'ห้องปฏิบัติการ(ห้องLab)มีอุปกรณ์เครื่องมือที่ไม่มีประสิทธิภาพ ทำให้ไม่สามารถเกิดความรู้และความเข้าใจได้',
          'ขนาดของห้องเรียนไม่เอื้ออํานวยต่อการการเรียน',
          'สภาพห้องเรียนเป็นอุปสรรคต่อการสร้างสมาธิให้เกิดต่อการเรียน',
          'บริเวณรอบสถานศึกษามีสิ่งเร้าทําให้ไม่อยากเข้าเรียน',
          'ในแต่ละคณะมีกิจกรรมที่ไม่เหมาะสมทําให้นักศึกษามีเวลาน้อยในการทบทวนบทเรียนให้ครบถ้วน',
          'การจัดตารางสอบไม่เหมาะสมต่อความยากง่ายและจํานวนของวิชา',]

vals = satisfication.mean()

fig = go.Figure(go.Bar(
    y=labels,
    x=vals,
    text=vals,
    texttemplate="%{value:.2f}",
    orientation='h',
    marker=dict(color=px.colors.qualitative.Pastel),
))

fig.update_layout(
    title="ปัจจัยด้านสถานศึกษา",
    xaxis_title="จำนวนนักศึกษา",
    yaxis_title="ประเด็นของปัจจัยด้านสถานศึกษา",
    yaxis={'categoryorder': 'total ascending'},
    xaxis_range=[1, 5],
    xaxis=dict(
        tickmode="array",
        tickvals=np.arange(len(vals)) + 1,
        ticktext=["1 น้อยที่สุด", "2 น้อย", "3 ปานกลาง", "4 มาก", "5 มากที่สุด"]
    ),
    height=500,
    width=1000,
)

st.plotly_chart(fig)


wordcloud1 = WordCloud(width = 800, height = 800,
                background_color ='white',
                stopwords = None,
                min_font_size = 10,
                colormap='viridis').generate(' '.join(da.df_kery[(da.df_kery['คณะ'] == select) & (da.df_kery['อันดับที่ 1'].str.contains(r'^[A-Za-z]{2}\d{3}$'))]['อันดับที่ 1']))

wordcloud2 = WordCloud(width = 800, height = 800,
                background_color ='white',
                stopwords = None,
                min_font_size = 10,
                colormap='viridis').generate(' '.join(da.df_kery[(da.df_kery['คณะ'] == select) & (da.df_kery['อันดับที่ 2'].str.contains(r'^[A-Za-z]{2}\d{3}$'))]['อันดับที่ 2']))

wordcloud3 = WordCloud(width = 800, height = 800,
                background_color ='white',
                stopwords = None,
                min_font_size = 10,
                colormap='viridis').generate(' '.join(da.df_kery[(da.df_kery['คณะ'] == select) & (da.df_kery['อันดับที่ 3'].str.contains(r'^[A-Za-z]{2}\d{3}$'))]['อันดับที่ 3']))

st.header('รายวิชาที่ไม่พึงพอใจ')
st.subheader('อันดับ 1')
st.image(wordcloud1.to_array())
st.subheader('อันดับ 2')
st.image(wordcloud2.to_array())
st.subheader('อันดับ 3')
st.image(wordcloud3.to_array())